@page
@model ExcelRead.Pages.ToDos.IndexModel
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="text" name="SearchString" value="@Model.CurrentFilter" placeholder="Search by header field" />
            <input type="submit" value="Search" class="btn btn-default" /> ||
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-SortField="Id" 
                   asp-route-SortDirection="@(Model.SortField == "Id" ? Model.GetNewSortDirection("Id") : Model.SortDirection)">
                    
                    @Html.DisplayNameFor(model => model.FilteredToDos[0].Id)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-SortField="Title"
                   asp-route-SortDirection="@(Model.SortField == "Title" ? Model.GetNewSortDirection("Title") : Model.SortDirection)">
                @Html.DisplayNameFor(model => model.FilteredToDos[0].Title)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-SortField="IsCompleted"
                   asp-route-SortDirection="@(Model.SortField == "IsCompleted" ? Model.GetNewSortDirection("IsCompleted") : Model.SortDirection)">
                @Html.DisplayNameFor(model => model.FilteredToDos[0].IsCompleted)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-SortField="UserId"
                   asp-route-SortDirection="@(Model.SortField == "UserId" ? Model.GetNewSortDirection("UserId") : Model.SortDirection)">
                @Html.DisplayNameFor(model => model.FilteredToDos[0].UserId)
                </a>
            </th>
            
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.FilteredToDos != null)
        {
            @foreach (var item in Model.FilteredToDos)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsCompleted)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserId)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        }
        
    </tbody>
</table>
<div class="pagination">
    @if (Model.PageIndex > 1)
    {
        <a asp-page-handler="OnGetAsync" asp-route-pageIndex="1" asp-route-sortField="@Model.SortField" asp-route-sortDirection="@Model.SortDirection">First</a>
        <a asp-page-handler="OnGetAsync" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-sortField="@Model.SortField" asp-route-sortDirection="@Model.SortDirection">Previous</a>
    }

    @for (var i = 1; i <= Math.Ceiling(Model.AllToDos.Count / (double)Model.PageSize); i++)
    {
        <span class="page-number @(i == Model.PageIndex ? "selected" : "")">
            <a asp-page-handler="OnGetAsync" asp-route-pageIndex="@i" asp-route-sortField="@Model.SortField" asp-route-sortDirection="@Model.SortDirection">@i</a>
        </span>
    }

    @if (Model.PageIndex < Math.Ceiling(Model.AllToDos.Count / (double)Model.PageSize))
    {
        <a asp-page-handler="OnGetAsync" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-sortField="@Model.SortField" asp-route-sortDirection="@Model.SortDirection">Next</a>
        <a asp-page-handler="OnGetAsync" asp-route-pageIndex="@Math.Ceiling(Model.AllToDos.Count / (double)Model.PageSize)" asp-route-sortField="@Model.SortField" asp-route-sortDirection="@Model.SortDirection">Last</a>
    }
</div>
